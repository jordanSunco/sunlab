package domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AccountExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public AccountExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    protected AccountExample(AccountExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ACC_ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ACC_ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ACC_ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ACC_ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ACC_ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ACC_ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ACC_ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ACC_ID <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ACC_ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ACC_ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ACC_ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ACC_ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andFirstNameIsNull() {
            addCriterion("ACC_FIRST_NAME is null");
            return this;
        }

        public Criteria andFirstNameIsNotNull() {
            addCriterion("ACC_FIRST_NAME is not null");
            return this;
        }

        public Criteria andFirstNameEqualTo(String value) {
            addCriterion("ACC_FIRST_NAME =", value, "firstName");
            return this;
        }

        public Criteria andFirstNameNotEqualTo(String value) {
            addCriterion("ACC_FIRST_NAME <>", value, "firstName");
            return this;
        }

        public Criteria andFirstNameGreaterThan(String value) {
            addCriterion("ACC_FIRST_NAME >", value, "firstName");
            return this;
        }

        public Criteria andFirstNameGreaterThanOrEqualTo(String value) {
            addCriterion("ACC_FIRST_NAME >=", value, "firstName");
            return this;
        }

        public Criteria andFirstNameLessThan(String value) {
            addCriterion("ACC_FIRST_NAME <", value, "firstName");
            return this;
        }

        public Criteria andFirstNameLessThanOrEqualTo(String value) {
            addCriterion("ACC_FIRST_NAME <=", value, "firstName");
            return this;
        }

        public Criteria andFirstNameLike(String value) {
            addCriterion("ACC_FIRST_NAME like", value, "firstName");
            return this;
        }

        public Criteria andFirstNameNotLike(String value) {
            addCriterion("ACC_FIRST_NAME not like", value, "firstName");
            return this;
        }

        public Criteria andFirstNameIn(List values) {
            addCriterion("ACC_FIRST_NAME in", values, "firstName");
            return this;
        }

        public Criteria andFirstNameNotIn(List values) {
            addCriterion("ACC_FIRST_NAME not in", values, "firstName");
            return this;
        }

        public Criteria andFirstNameBetween(String value1, String value2) {
            addCriterion("ACC_FIRST_NAME between", value1, value2, "firstName");
            return this;
        }

        public Criteria andFirstNameNotBetween(String value1, String value2) {
            addCriterion("ACC_FIRST_NAME not between", value1, value2, "firstName");
            return this;
        }

        public Criteria andLastNameIsNull() {
            addCriterion("ACC_LAST_NAME is null");
            return this;
        }

        public Criteria andLastNameIsNotNull() {
            addCriterion("ACC_LAST_NAME is not null");
            return this;
        }

        public Criteria andLastNameEqualTo(String value) {
            addCriterion("ACC_LAST_NAME =", value, "lastName");
            return this;
        }

        public Criteria andLastNameNotEqualTo(String value) {
            addCriterion("ACC_LAST_NAME <>", value, "lastName");
            return this;
        }

        public Criteria andLastNameGreaterThan(String value) {
            addCriterion("ACC_LAST_NAME >", value, "lastName");
            return this;
        }

        public Criteria andLastNameGreaterThanOrEqualTo(String value) {
            addCriterion("ACC_LAST_NAME >=", value, "lastName");
            return this;
        }

        public Criteria andLastNameLessThan(String value) {
            addCriterion("ACC_LAST_NAME <", value, "lastName");
            return this;
        }

        public Criteria andLastNameLessThanOrEqualTo(String value) {
            addCriterion("ACC_LAST_NAME <=", value, "lastName");
            return this;
        }

        public Criteria andLastNameLike(String value) {
            addCriterion("ACC_LAST_NAME like", value, "lastName");
            return this;
        }

        public Criteria andLastNameNotLike(String value) {
            addCriterion("ACC_LAST_NAME not like", value, "lastName");
            return this;
        }

        public Criteria andLastNameIn(List values) {
            addCriterion("ACC_LAST_NAME in", values, "lastName");
            return this;
        }

        public Criteria andLastNameNotIn(List values) {
            addCriterion("ACC_LAST_NAME not in", values, "lastName");
            return this;
        }

        public Criteria andLastNameBetween(String value1, String value2) {
            addCriterion("ACC_LAST_NAME between", value1, value2, "lastName");
            return this;
        }

        public Criteria andLastNameNotBetween(String value1, String value2) {
            addCriterion("ACC_LAST_NAME not between", value1, value2, "lastName");
            return this;
        }

        public Criteria andEmailAddressIsNull() {
            addCriterion("ACC_EMAIL is null");
            return this;
        }

        public Criteria andEmailAddressIsNotNull() {
            addCriterion("ACC_EMAIL is not null");
            return this;
        }

        public Criteria andEmailAddressEqualTo(String value) {
            addCriterion("ACC_EMAIL =", value, "emailAddress");
            return this;
        }

        public Criteria andEmailAddressNotEqualTo(String value) {
            addCriterion("ACC_EMAIL <>", value, "emailAddress");
            return this;
        }

        public Criteria andEmailAddressGreaterThan(String value) {
            addCriterion("ACC_EMAIL >", value, "emailAddress");
            return this;
        }

        public Criteria andEmailAddressGreaterThanOrEqualTo(String value) {
            addCriterion("ACC_EMAIL >=", value, "emailAddress");
            return this;
        }

        public Criteria andEmailAddressLessThan(String value) {
            addCriterion("ACC_EMAIL <", value, "emailAddress");
            return this;
        }

        public Criteria andEmailAddressLessThanOrEqualTo(String value) {
            addCriterion("ACC_EMAIL <=", value, "emailAddress");
            return this;
        }

        public Criteria andEmailAddressLike(String value) {
            addCriterion("ACC_EMAIL like", value, "emailAddress");
            return this;
        }

        public Criteria andEmailAddressNotLike(String value) {
            addCriterion("ACC_EMAIL not like", value, "emailAddress");
            return this;
        }

        public Criteria andEmailAddressIn(List values) {
            addCriterion("ACC_EMAIL in", values, "emailAddress");
            return this;
        }

        public Criteria andEmailAddressNotIn(List values) {
            addCriterion("ACC_EMAIL not in", values, "emailAddress");
            return this;
        }

        public Criteria andEmailAddressBetween(String value1, String value2) {
            addCriterion("ACC_EMAIL between", value1, value2, "emailAddress");
            return this;
        }

        public Criteria andEmailAddressNotBetween(String value1, String value2) {
            addCriterion("ACC_EMAIL not between", value1, value2, "emailAddress");
            return this;
        }
    }
}