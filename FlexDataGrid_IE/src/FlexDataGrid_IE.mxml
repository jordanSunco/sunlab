<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Script>
        <![CDATA[
            import mx.controls.dataGridClasses.DataGridColumn;
            import com.as3xls.xls.Cell;
            import mx.collections.ArrayCollection;
        
            import com.as3xls.xls.Sheet;
            import com.as3xls.xls.ExcelFile;
           
            private var fileReference:FileReference;
               
            [Bindable]
            private var itemDGDataProvider:ArrayCollection = new ArrayCollection([
                {name:"Item1", value:"21", qty:"3", cost:"12.21"},
                {name:"Item2", value:"20", qty:"4", cost:"12.22"},
                {name:"Item3", value:"22", qty:"5", cost:"12.23"},
                {name:"Item4", value:"23", qty:"2", cost:"12.24"}
            ]);
            
            [Bindable]
            private var rebateDGDataProvider:ArrayCollection = new ArrayCollection();
            
            private function browseAndUpload():void {
                fileReference = new FileReference();
                fileReference.addEventListener(Event.SELECT, fileReference_Select);
                fileReference.addEventListener(Event.CANCEL, fileReference_Cancel);
                fileReference.browse();
            }
            
            private function fileReference_Select(event:Event):void {
                fileReference.addEventListener(ProgressEvent.PROGRESS, fileReference_Progress);
                fileReference.addEventListener(Event.COMPLETE, fileReference_Complete);
                fileReference.addEventListener(IOErrorEvent.IO_ERROR, onLoadError);
                fileReference.load();
            }
            
            private function fileReference_Cancel(event:Event):void {
                fileReference = null;
            }
            
            private function fileReference_Progress(event:ProgressEvent):void {
                progressBar.visible = true;
                progressBar.includeInLayout = true;
            }
            
            private function onLoadError():void {
                fileReference = null;
            }
            
            private function fileReference_Complete(event:Event):void {
                var fileData:ByteArray = fileReference.data;
                var excelFile:ExcelFile = new ExcelFile();
                var sheet:Sheet;
                var rowCount:int;
                var columnCount:int;
                
                if(fileData != null && fileData.length > 0){
                    excelFile.loadFromByteArray(fileData);
                    
                    sheet = excelFile.sheets[0];
                    if(sheet != null) {
//                        rowCount = sheet.rows;
//                        columnCount = sheet.cols;
//                        for(var row:int = 0; row < rowCount; row++) {
//                            for(var col:int=0; col < columnCount; col++) {
//                                trace(sheet.getCell(row,col).value);
//                            }
//                        }
                        rebateDGDataProvider = sheet.values;
                    }
                }
                
                progressBar.visible = false;
                progressBar.includeInLayout = false;
                rebateScheduleDG.includeInLayout = true;
                rebateScheduleDG.visible = true;
                fileReference = null;
            }
            
            private function exportToExcel():void {
                var dataProviderCollection:ArrayCollection = rebateByItemDG.dataProvider as ArrayCollection;
                var dataGridColumns:Array = rebateByItemDG.columns;
                
                var rowCount:int = dataProviderCollection.length;
                var columnCount:int = dataGridColumns.length;
                
                var sheet:Sheet = new Sheet();
                // 多一行放置列标题
                sheet.resize(rowCount + 1, columnCount);
                
                // 设置列标题
                for (var i:uint = 0; i < columnCount; i++) {
                    sheet.setCell(0, i, 
                        (dataGridColumns[i] as DataGridColumn).headerText);
                }
               
                for(var r:uint = 0; r < rowCount; r++) {
                    var record:Object = dataProviderCollection.getItemAt(r);
                    
                    for (var c:uint = 0; c < columnCount; c++) {
                        // 从sheet的第2行开始写数据
                        // 第一行已经插入了列标题
                        sheet.setCell(r + 1, c, 
                            record[(dataGridColumns[c] as DataGridColumn).dataField]);
                    }
                }
                
                var xls:ExcelFile = new ExcelFile();
                xls.sheets.addItem(sheet);
                
                var bytes:ByteArray = xls.saveToByteArray();
                var fr:FileReference = new FileReference();
                fr.save(bytes, "SampleExport.xls");
            }
        ]]>
    </mx:Script>
        
    <mx:VBox width="100%" height="100%" borderThickness="1" borderColor="0x000000"
            backgroundColor="0xffffff" borderStyle="solid" cornerRadius="10" 
            horizontalAlign="center">
        <mx:Form>
            <mx:FormHeading label="Excel Import/Export Demo" color="0x2EC200"/>
            <mx:FormItem label="Do you want to import your items from Excel?">
                <mx:FormItem label="Browse you excel file">
                    <mx:Button label="Browse" click="browseAndUpload()"/>
                    <mx:HBox>
                        <mx:ProgressBar id="progressBar" includeInLayout="false" 
                            visible="false" indeterminate="true"/>
                    </mx:HBox>
                </mx:FormItem>
                <mx:DataGrid id="rebateScheduleDG" includeInLayout="false" visible="false" 
                    dataProvider="{rebateDGDataProvider}" width="100%"/>
            </mx:FormItem>
            <mx:FormItem label="Export Datagrid items to Excel?">
                <mx:HBox width="100%" verticalAlign="middle">
                    <mx:DataGrid id="rebateByItemDG" includeInLayout="true"
                        visible="true" dataProvider="{itemDGDataProvider}" 
                        width="100%" editable="true"/>
                    <mx:Button label="Export To Excel" click="exportToExcel()"/>
                </mx:HBox>
            </mx:FormItem>
        </mx:Form>
    </mx:VBox>
</mx:Application>