<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" title="添加图书">
    <mx:Script>
        <![CDATA[
            import mx.events.ListEvent;
            import mx.rpc.Responder;
            import model.Book;
            
            import controller.events.BookEvent;
            
            [Bindable]
            public var modelLocator:BookModelLocator = BookModelLocator.getInstance();

            private function addBook():void {
                var book:Book = new Book(bookName.text, bookAuthor.text,
                    bookPrice.text);

                // mx.rpc.Responder 与 flash.net.Responder 命名冲突, 必须写全名.
                // 发出带IResponder的event后, 触发指定的Command去(由FrontController控制),
                // Command通过主动调用IResponder.result或者通delegate回调,
                // 即到达handleAddResult方法.
                var event:BookEvent = new BookEvent(BookEvent.ADD_BOOK,
                    new mx.rpc.Responder(handleAddResult, handleAddFault), book);
                event.dispatch();
            }

            private function handleAddResult(data:Object):void {
                trace(data);
                // 添加成功后, 重置表单并设置焦点到第一个字段,
                // 标准的Cairgorm很难做到这点(不让command依赖view).
                resetForm();
            }

            private function handleAddFault(info:Object):void {
                trace(info);
                resetForm();
            }

            private function deleteBook(event:ListEvent):void {
                // 不发出带IResponder的event, 所有的事情由Command处理
                var bookEvent:BookEvent = new BookEvent(BookEvent.DELETE_BOOK,
                    null, event.itemRenderer.data as Book);
                bookEvent.dispatch();
            }

            private function resetForm():void {
                bookName.text = "";
                bookAuthor.text = "";
                bookPrice.text = "";

                bookName.setFocus();
            }
        ]]>
    </mx:Script>
    <mx:Form>
        <mx:FormItem label="书名">
            <mx:TextInput id="bookName" />
        </mx:FormItem>
        <mx:FormItem label="作者">
            <mx:TextInput id="bookAuthor" />
        </mx:FormItem>
        <mx:FormItem label="单价">
            <mx:TextInput id="bookPrice" />
        </mx:FormItem>
        <mx:Button label="添加" click="addBook()" />
    </mx:Form>
    <mx:DataGrid id="dg" dataProvider="{modelLocator.books}"
            doubleClickEnabled="true" itemDoubleClick="deleteBook(event)">
        <mx:columns>
            <mx:DataGridColumn headerText="书名" dataField="name" />
            <mx:DataGridColumn headerText="作者" dataField="author" />
            <mx:DataGridColumn headerText="单价" dataField="price" />
        </mx:columns>
    </mx:DataGrid>
</mx:Panel>
