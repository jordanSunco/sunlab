package dao;

import com.ibatis.sqlmap.client.SqlMapClient;
import domain.Account;
import domain.AccountExample;
import java.sql.SQLException;
import java.util.List;

public class AccountDAOImpl implements AccountDAO {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public AccountDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public int countByExample(AccountExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("ACCOUNT.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public int deleteByExample(AccountExample example) throws SQLException {
        int rows = sqlMapClient.delete("ACCOUNT.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public int deleteByPrimaryKey(Integer id) throws SQLException {
        Account key = new Account();
        key.setId(id);
        int rows = sqlMapClient.delete("ACCOUNT.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public void insert(Account record) throws SQLException {
        sqlMapClient.insert("ACCOUNT.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public void insertSelective(Account record) throws SQLException {
        sqlMapClient.insert("ACCOUNT.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public List selectByExample(AccountExample example) throws SQLException {
        List list = sqlMapClient.queryForList("ACCOUNT.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public Account selectByPrimaryKey(Integer id) throws SQLException {
        Account key = new Account();
        key.setId(id);
        Account record = (Account) sqlMapClient.queryForObject("ACCOUNT.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public int updateByExampleSelective(Account record, AccountExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("ACCOUNT.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public int updateByExample(Account record, AccountExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("ACCOUNT.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public int updateByPrimaryKeySelective(Account record) throws SQLException {
        int rows = sqlMapClient.update("ACCOUNT.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    public int updateByPrimaryKey(Account record) throws SQLException {
        int rows = sqlMapClient.update("ACCOUNT.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table ACCOUNT
     *
     * @ibatorgenerated Wed Jun 30 15:50:27 CST 2010
     */
    private static class UpdateByExampleParms extends AccountExample {
        private Object record;

        public UpdateByExampleParms(Object record, AccountExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}