<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-lazy-init="true">

	<description>Spring 配置模板</description>

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the dataSource definition below) -->
    <!-- 定义受环境影响易变的变量 -->
<!--	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
<!--		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />-->
<!--		<property name="ignoreResourceNotFound" value="true" />-->
<!--		<property name="locations">-->
<!--			<list>-->
<!--				<value>classpath:application.properties</value>-->
<!--			</list>-->
<!--		</property>-->
<!--	</bean>-->
    <context:property-placeholder location="classpath:application.properties"/>
    
    <!-- 以配置的方式来注册bean -->
    <bean id="a" class="test.bean.A">
        <property name="aString" value="${test}"/>
    </bean>
    
	<!-- 
            使用annotation(注解) 自动注册(@Repository, @Service, @Controller)bean, 
            并保证属性被注入(@Required, @Autowired, @Qualifier) 
    -->
	<context:component-scan base-package="test.bean" />
    
    <!-- 以配置方式使用AOP -->
    <bean id="proxyS" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>test.IS</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>serviceAfterRunningAdvice</value>
            </list>
        </property>
        <property name="targetName">
            <value>s</value>
        </property>
    </bean>
    
    <!-- 正则表达式切面 -->
<!--    <bean id="advisor" -->
<!--        class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">  -->
<!--        <property name="patterns">-->
<!--            <list>-->
<!--                <value>test.IS.orz</value>-->
<!--            </list>-->
<!--        </property>-->
<!--        <property name="advice" ref="serviceInterceptor" />-->
<!--    </bean>-->

    <!-- 方法名切面 增强定位到具体的方法 -->
    <bean id="advisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="mappedNames">
            <list>
                <value>o*</value>
            </list>
        </property>
        <property name="advice" ref="serviceInterceptor" />
    </bean>
    
    <!-- 用户可能绕过AOP代理直接获取原始bean, 自动代理弥补了这个问题 -->
<!--    <bean id="beanNameAutoProxy"-->
<!--        class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">-->
<!--        <property name="beanNames">-->
<!--            <list>-->
<!--                <value>s</value>-->
<!--            </list>-->
<!--        </property>-->
<!--        <property name="interceptorNames">-->
<!--            <list>-->
<!--                <value>advisor</value>-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->
</beans>